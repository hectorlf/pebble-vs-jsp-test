apply plugin: 'war'
apply plugin: 'eclipse-wtp'

tasks.withType(JavaCompile) {
   options.incremental = true
   sourceCompatibility = '1.7'
   targetCompatibility = '1.7'
}

repositories {
   mavenCentral()
   flatDir { dirs '../lib' }
}

configurations {
   jettyRunner
   jettyRuntimeClasspath
}

dependencies {
   providedCompile 'commons-logging:commons-logging:1.1.3'
   providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
   providedCompile 'log4j:log4j:1.2.17'

   compile 'org.slf4j:slf4j-api:1.7.12'
   compile 'net.sourceforge.stripes:stripes:1.5.8'
   compile 'joda-time:joda-time:2.7'
   compile 'joda-time:joda-time-jsptags:1.1.1'
   compile 'com.mitchellbosecke:pebble:1.4.5'
   
   runtime 'org.apache.taglibs:taglibs-standard-spec:1.2.5'
   runtime 'org.apache.taglibs:taglibs-standard-impl:1.2.5'
   runtime 'org.slf4j:jcl-over-slf4j:1.7.12'
   runtime 'org.slf4j:log4j-over-slf4j:1.7.12'
   runtime 'ch.qos.logback:logback-classic:1.1.3'

   jettyRunner 'org.eclipse.jetty:jetty-runner:9.2.9+'
}

war {
   from 'WebContent'
}

// jetty-runner alias
task run {
	outputs.upToDateWhen { false }
}

// local jetty run
 
task deployOnLocalJetty(type: JavaExec, dependsOn: assemble) {
   classpath configurations.jettyRunner.incoming.files
   main = '-jar'
   args configurations.jettyRunner.incoming.files.asFileTree.matching({pattern -> pattern.include('**/jetty-runner*.jar')}).singleFile.absolutePath
   configurations.jettyRuntimeClasspath.incoming.files.asFileTree.visit({
      fileDetails -> args '--jar'; args fileDetails.file.absolutePath
   })
   args '--stop-port'
   args '8181'
   args '--stop-key'
   args 'abc123'
   args '--out'
   args "$buildDir/jetty-output.log"
   args '--config'
   args "$buildDir/jetty.xml"
   args war.archivePath
   
   doFirst {
      copy {
         from "$rootDir/jetty/jetty.xml"; into "$buildDir"; expand(keystorePath: "$buildDir/key.store")
      }
	  copy {
         from "$rootDir/jetty/key.store"; into "$buildDir"
      }
   }
}

run.dependsOn deployOnLocalJetty



// Gradle wrapper task
// Only used when in need to reinstall the wrapper
task wrapper(type: Wrapper) {
   gradleVersion = '2.3'
}